{"ast":null,"code":"var _jsxFileName = \"/Users/parth.maradia/Project/practice/todo/src/CardList.jsx\",\n  _s = $RefreshSig$();\n// display a list of cards with To-Do events input by user\nimport { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Box from \"@mui/material/Box\";\nimport Filters from './Filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardList = () => {\n  _s();\n  const [tasks, setTasks] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [done, setDone] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:8000/tasks').then(res => {\n      if (!res.ok) {\n        throw Error('Could not fetch the data for that resource');\n      }\n      return res.json();\n    }).then(data => {\n      setTasks(data);\n      setIsLoading(false);\n      setError(null);\n    }).catch(err => {\n      setIsLoading(false);\n      setError(err.message);\n    });\n  }, [tasks]); // Is tasks correct here?\n\n  // Set the status of the task to false when the task is clicked\n  const handleClick = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: false\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 26\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-list\",\n    children: [/*#__PURE__*/_jsxDEV(Filters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1,\n        borderRadius: 2,\n        display: \"grid\",\n        gridTemplateColumns: {\n          md: \"1fr\"\n        },\n        gap: 2,\n        alignItems: \"center\",\n        // Align items in the middle\n        padding: \"5px\",\n        marginLeft: \"180px\",\n        marginRight: \"180px\",\n        marginTop: \"30px\"\n      },\n      children: tasks && tasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n        id: task.id,\n        task: task.task,\n        status: task.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(CardList, \"JBLD5ripvtQvwSeCB2+szgOYwu0=\");\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["useState","useEffect","Card","Box","Filters","jsxDEV","_jsxDEV","CardList","_s","tasks","setTasks","isLoading","setIsLoading","error","setError","done","setDone","fetch","then","res","ok","Error","json","data","catch","err","message","handleClick","id","updatedTasks","map","task","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","sx","p","borderRadius","display","gridTemplateColumns","md","gap","alignItems","padding","marginLeft","marginRight","marginTop","_c","$RefreshReg$"],"sources":["/Users/parth.maradia/Project/practice/todo/src/CardList.jsx"],"sourcesContent":["// display a list of cards with To-Do events input by user\nimport { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Box from \"@mui/material/Box\";\nimport Filters from './Filters';\n\nconst CardList = () => {\n    const [tasks, setTasks] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const [done, setDone] = useState(false);\n    \n\n    useEffect(() => {\n        fetch('http://localhost:8000/tasks')\n            .then(res => {\n                if (!res.ok) {\n                    throw Error('Could not fetch the data for that resource');\n                }\n                return res.json();\n            })\n            .then(data => {\n                setTasks(data);\n                setIsLoading(false);\n                setError(null);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                setError(err.message);\n            })\n    }\n    , [tasks]);  // Is tasks correct here?\n \n    // Set the status of the task to false when the task is clicked\n    const handleClick = (id) => {\n        const updatedTasks = tasks.map(task => {\n            if (task.id === id) {\n                return {\n                    ...task,\n                    status: false\n                };\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n    };\n\n\n\n    if(isLoading) return <div>Loading...</div>\n    if(error) return <div>{ error }</div>\n\n    return (\n\n        <div className=\"card-list\">\n            <Filters />\n\n            <Box\n            sx={{\n                p: 1,\n                borderRadius: 2,\n                display: \"grid\",\n                gridTemplateColumns: { md: \"1fr\" },\n                gap: 2,\n                alignItems: \"center\" , // Align items in the middle\n                padding: \"5px\",\n                marginLeft: \"180px\",\n                marginRight: \"180px\",\n                marginTop: \"30px\",\n            }}\n        >\n            {tasks && tasks.map(task => (\n                <Card id={task.id} task={task.task} status={task.status} />\n            ))}\n        </Box>\n        \n        </div>\n    );\n};\n    \nexport default CardList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}