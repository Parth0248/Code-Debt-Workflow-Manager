{"ast":null,"code":"var _jsxFileName = \"/Users/parth.maradia/Project/practice/todo/src/Home.jsx\",\n  _s = $RefreshSig$();\n// Mui text field component to input user's tasks and save them to the database\nimport React, { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [author, setAuthor] = useState('mario');\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const blog = {\n      title,\n      body,\n      author\n    };\n    setIsPending(true);\n    fetch('http://localhost:8000/blogs', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      console.log('new blog added');\n      setIsPending(false);\n      history.push('/');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Blog title\",\n        variant: \"standard\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Blog body\",\n        variant: \"standard\",\n        required: true,\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Blog author\",\n        variant: \"standard\",\n        required: true,\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 28\n      }, this), isPending && /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: \"Adding Blog...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Create, \"XSlfbcwkqMUSStx+p1eN3IHPr5Y=\", false, function () {\n  return [useHistory];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","TextField","Button","useHistory","jsxDEV","_jsxDEV","Create","_s","title","setTitle","body","setBody","author","setAuthor","isPending","setIsPending","history","handleSubmit","e","preventDefault","blog","fetch","method","headers","JSON","stringify","then","console","log","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","variant","required","value","onChange","target","type","disabled","_c","$RefreshReg$"],"sources":["/Users/parth.maradia/Project/practice/todo/src/Home.jsx"],"sourcesContent":["// Mui text field component to input user's tasks and save them to the database\nimport React, { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Create(){\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const [author, setAuthor] = useState('mario');\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const blog = { title, body, author };\n    \n        setIsPending(true);\n    \n        fetch('http://localhost:8000/blogs', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(blog),\n        }).then(() => {\n        console.log('new blog added');\n        setIsPending(false);\n        history.push('/');\n        });\n    };\n    \n    return (\n        <div className=\"create\">\n        <h2>Add a New Blog</h2>\n        <form onSubmit={handleSubmit}>\n            <TextField\n            label=\"Blog title\"\n            variant=\"standard\"\n            required\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            />\n            <TextField\n            label=\"Blog body\"\n            variant=\"standard\"\n            required\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n            />\n            <TextField\n            label=\"Blog author\"\n            variant=\"standard\"\n            required\n            value={author}\n            onChange={(e) => setAuthor(e.target.value)}\n            />\n            {!isPending && <Button type=\"submit\">Add Blog</Button>}\n            {isPending && <Button disabled>Adding Blog...</Button>}\n        </form>\n        </div>\n    );\n    }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}