{"ast":null,"code":"var _jsxFileName = \"/Users/parth.maradia/Project/practice/todo/src/CardList.jsx\",\n  _s = $RefreshSig$();\n// display a list of cards with To-Do events input by user\nimport { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardList = () => {\n  _s();\n  const [tasks, setTasks] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8000/tasks').then(res => {\n      if (!res.ok) {\n        throw Error('Could not fetch the data for that resource');\n      }\n      return res.json();\n    }).then(data => {\n      setTasks(data);\n      setIsLoading(false);\n      setError(null);\n    }).catch(err => {\n      setIsLoading(false);\n      setError(err.message);\n    });\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-list\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1,\n        borderRadius: 2,\n        display: \"grid\",\n        gridTemplateColumns: {\n          md: \"1fr\"\n        },\n        gap: 2,\n        alignItems: \"center\",\n        // Align items in the middle\n        padding: \"5px\",\n        marginLeft: \"150px\",\n        marginRight: \"150px\",\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(CardList, \"o3hGZ6ga9xs9/sDdu37+PiPMvvo=\");\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["useState","useEffect","Card","Box","jsxDEV","_jsxDEV","CardList","_s","tasks","setTasks","isLoading","setIsLoading","error","setError","fetch","then","res","ok","Error","json","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","sx","p","borderRadius","display","gridTemplateColumns","md","gap","alignItems","padding","marginLeft","marginRight","marginTop","_c","$RefreshReg$"],"sources":["/Users/parth.maradia/Project/practice/todo/src/CardList.jsx"],"sourcesContent":["// display a list of cards with To-Do events input by user\nimport { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Box from \"@mui/material/Box\";\n\nconst CardList = () => {\n    const [tasks, setTasks] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch('http://localhost:8000/tasks')\n            .then(res => {\n                if (!res.ok) {\n                    throw Error('Could not fetch the data for that resource');\n                }\n                return res.json();\n            })\n            .then(data => {\n                setTasks(data);\n                setIsLoading(false);\n                setError(null);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                setError(err.message);\n            })\n    }\n    , []);\n\n    if(isLoading) return <div>Loading...</div>\n    return (\n        <div className=\"card-list\">\n            <Box\n            sx={{\n                p: 1,\n                borderRadius: 2,\n                display: \"grid\",\n                gridTemplateColumns: { md: \"1fr\" },\n                gap: 2,\n                alignItems: \"center\" , // Align items in the middle\n                padding: \"5px\",\n                marginLeft: \"150px\",\n                marginRight: \"150px\",\n                marginTop: \"30px\",\n            }}\n        >\n            <Card />\n            <Card />\n        </Box>\n        \n        </div>\n    );\n};\n    \nexport default CardList;"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZa,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAACC,GAAG,IAAI;MACT,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACT,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAC7D;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVX,QAAQ,CAACW,IAAI,CAAC;MACdT,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,IAAI;MACVX,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;IACzB,CAAC,CAAC;EACV,CAAC,EACC,EAAE,CAAC;EAEL,IAAGb,SAAS,EAAE,oBAAOL,OAAA;IAAAmB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC1C,oBACIvB,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAL,QAAA,eACtBnB,OAAA,CAACF,GAAG;MACJ2B,EAAE,EAAE;QACAC,CAAC,EAAE,CAAC;QACJC,YAAY,EAAE,CAAC;QACfC,OAAO,EAAE,MAAM;QACfC,mBAAmB,EAAE;UAAEC,EAAE,EAAE;QAAM,CAAC;QAClCC,GAAG,EAAE,CAAC;QACNC,UAAU,EAAE,QAAQ;QAAG;QACvBC,OAAO,EAAE,KAAK;QACdC,UAAU,EAAE,OAAO;QACnBC,WAAW,EAAE,OAAO;QACpBC,SAAS,EAAE;MACf,CAAE;MAAAjB,QAAA,gBAEFnB,OAAA,CAACH,IAAI;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRvB,OAAA,CAACH,IAAI;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAACrB,EAAA,CAhDID,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}